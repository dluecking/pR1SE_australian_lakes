library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(gggenes)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# import df and filter  --------------------------------------------------
manual_region_df <- fread("manual_region_df.tsv") %>%
filter(comment == "")
gene_df <- fread("gene_df.tsv")
gene_df2 <- data.table()
for(i in 1:nrow(manual_region_df)){
current_contig <- manual_region_df$contig[i]
current_min <- manual_region_df$min_orf[i]
current_max <- manual_region_df$max_orf[i]
tmp_df <- gene_df %>%
filter(contig == current_contig) %>%
filter(`orf#` >= current_min, `orf#` <= current_max)
# reverse order based on direction of ORF17
if(tmp_df$strand[tmp_df$annot == "ORF17.faa"] != TRUE){
tmp_df$end <- tmp_df$end * -1
tmp_df$start <- tmp_df$start * -1
# switch start and end to adjust arrow direction later on
t <- tmp_df$start
tmp_df$start <- tmp_df$end
tmp_df$end <- t
}
gene_df2 <- rbind(gene_df2, tmp_df)
}
gene_df <- gene_df2
rm(gene_df2, i, current_contig, current_max, current_min, tmp_df)
View(gene_df)
View(gene_df)
# author: dlueckin
# date: Wed May 31 15:23:12 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(gggenes)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# import df and filter  --------------------------------------------------
manual_region_df <- fread("manual_region_df.tsv") %>%
filter(comment == "")
gene_df <- fread("gene_df.tsv")
gene_df2 <- data.table()
for(i in 1:nrow(manual_region_df)){
current_contig <- manual_region_df$contig[i]
current_min <- manual_region_df$min_orf[i]
current_max <- manual_region_df$max_orf[i]
tmp_df <- gene_df %>%
filter(contig == current_contig) %>%
filter(`orf#` >= current_min, `orf#` <= current_max)
# reverse order based on direction of ORF17
if(tmp_df$strand[tmp_df$annot == "ORF17.faa"] != TRUE){
tmp_df$end <- tmp_df$end * -1
tmp_df$start <- tmp_df$start * -1
# switch start and end to adjust arrow direction later on
t <- tmp_df$start
tmp_df$start <- tmp_df$end
tmp_df$end <- t
}
gene_df2 <- rbind(gene_df2, tmp_df)
}
gene_df <- gene_df2
rm(gene_df2, i, current_contig, current_max, current_min, tmp_df)
gene_df$annot <- str_remove(gene_df$annot, "\\.faa")
gene_df$annot[gene_df$annot == "ORF10a"] <- "ORF10"
gene_df$annot[gene_df$annot == "ORF10b"] <- "ORF10"
gene_df$annot[gene_df$annot == ""] <- "unknown"
View(gene_df)
gene_df$length <- abs(gene_df$end) - abs(gene_df$start)
-59154 - (-63458)
gene_df$length <- gene_df$end - gene_df$start
glimpse(gene_df)
ggplot(gene_df, aes(x = annot, y = length)) +
geom_boxplot()
ggplot(gene_df, aes(x = annot, y = length)) +
geom_violin()
ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_violin()
ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_violin() +
theme_minimal() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9"))
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=20) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",Â´
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=20) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9"))
library(ggridges)
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=20) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9"))
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=50) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9"))
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=70) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9"))
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=70) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("")
ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=70) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("Length (bp)") +
ylab("")
ggsave("../../plots/average_ORF_lengths_ridgeline.pdf", heigth = 400, width = 750, units = "px")
ggsave("../../plots/average_ORF_lengths_ridgeline.pdf", height = 400, width = 750, units = "px")
ggsave("../../plots/average_ORF_lengths_ridgeline.pdf", height = 400, width = 750, units = "mm")
ggsave("../../plots/average_ORF_lengths_ridgeline.pdf", height = 4, width = 7)
ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_violin() +
theme_minimal() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9"))
ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_bar() +
theme_minimal() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("Length (bp)") +
ylab("")
ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_box() +
theme_minimal() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("Length (bp)") +
ylab("")
ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("Length (bp)") +
ylab("")
box <- ggplot(gene_df, aes(x = annot, y = length, fill = annot)) +
geom_boxplot() +
theme_minimal() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("Length (bp)") +
ylab("")
ggsave(plot = box, "../../plots/average_ORF_lengths_boxplot.pdf", height = 4, width = 7)
ridge <- ggplot(gene_df, aes(y = annot, x = length, fill = annot)) +
geom_density_ridges(alpha=0.6, stat="binline", bins=70) +
theme_ridges() +
scale_fill_manual(values = c("ORF6" = "#f94144",
"ORF8" = "#f3722c",
"ORF10" = "#f8961e",
"ORF17" = "#f9c74f",
"ORF21" = "#90be6d",
"ORF23" = "#43aa8b",
"ORF24" = "#577590",
"unknown" = "#FBFEF9")) +
xlab("Length (bp)") +
ylab("")
ggsave(plot = ridge, "../../plots/average_ORF_lengths_ridgeline.pdf", height = 4, width = 7)
# author: dlueckin
# date: Wed May 31 15:23:12 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(gggenes)
library(ggridges)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
gene_df <- fread("gene_df.tsv")
View(gene_df)
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(gggenes)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# import gene data --------------------------------------------------------
gene_df <- data.table()
for(file in list.files("../sco/complete/")){
tmp_df <- fread(paste0("../sco/complete/", file), skip = 2, sep = "_")
tmp_df$contig <- str_remove(file, "\\.fasta\\.sco")
names(tmp_df) <- c("orf#", "start", "end", "strand", "contig")
gene_df <- rbind(gene_df, tmp_df)
}
rm(tmp_df, file)
gene_df$strand[gene_df$strand == "+"] <- TRUE
gene_df$strand[gene_df$strand == "-"] <- FALSE
gene_df$`orf#` <- as.numeric(str_remove(gene_df$`orf#`, ">"))
View(gene_df)
# author: dlueckin
# date: Fri Jun  2 10:43:59 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
setwd("/run/user/1000/gvfs/sftp:host=linux-desktop-1.mpi-bremen.de,user=dlueckin/home/dlueckin/projects/pR1SE_australian_lakes/all_pR1SE_ORFs/scripts")
blast_df <- fread("../blastp_pR1SE_vs_all_complete_genes.out")
View(blast_df)
blast_df$ORF <- str_extract(blast_df$V1, pattern = "\\d*$")
table(blast_df$ORF)
blast_df$ORF <- as.numeric(str_extract(blast_df$V1, pattern = "\\d*$"))
count_df <- table(blast_df$ORF)
count_df <- data.table((blast_df$ORF))
View(count_df)
count_df <- data.table(blast_df$ORF)
blast_df$ORF
count_df <- data.table(table(blast_df$ORF))
View(count_df)
ggplot(count_df, aes(x = V1, y = N)) +
geom_barplot()
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar()
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity')
count_df <- data.table(table(blast_df$ORF)) %>%
arrange(N)
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity')
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal()
View(count_df)
count_df <- data.table(table(blast_df$ORF)) %>%
sort(N)
View(count_df)
count_df <- data.table(table(blast_df$ORF)) %>%
arrange(V1)
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal()
View(count_df)
View(count_df)
blast_df$ORF <- as.numeric(str_extract(blast_df$V1, pattern = "\\d*$"))
count_df <- data.table(table(blast_df$ORF)) %>%
arrange(V1)
count_df <- data.table(table(blast_df$ORF))
glimpse(count_df)
count_df$V1 <- as.numeric(count_df$V1)
count_df <- count_df %>%
arrange(V1)
View(count_df)
View(count_df)
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal()
View(blast_df)
length(unique(blast_df$V2))
#
length(list.files("../../check_synenty/genes/complete/"))
#
tot_contigs <- length(list.files("../../check_synenty/genes/complete/"))
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal() +
xlim(c(0, tot_contigs))
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal() +
ylim(c(0, tot_contigs))
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal() +
ylim(c(0, tot_contigs)) +
xlabs("ORF#") +
ylabs("Occurances")
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity') +
theme_minimal() +
ylim(c(0, tot_contigs)) +
xlab("ORF#") +
ylab("Occurances")
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity', color = "black", fill = "blue", alpha = 0.8) +
theme_minimal() +
ylim(c(0, tot_contigs)) +
xlab("ORF#") +
ylab("Occurances")
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity', color = "black", fill = "lavender", alpha = 0.8) +
theme_minimal() +
ylim(c(0, tot_contigs)) +
xlab("ORF#") +
ylab("Occurances")
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity', color = "black", fill = "grey", alpha = 0.8) +
theme_minimal() +
ylim(c(0, tot_contigs)) +
xlab("ORF#") +
ylab("Occurances")
ggsave(plot = last_plot(), filename = "../../plots/all_ORF_occurances.pdf", height = 4, width = 7)
View(count_df)
ggplot(count_df, aes(x = V1, y = N)) +
geom_bar(stat = 'identity', color = "black", fill = "grey", alpha = 0.8) +
theme_minimal() +
ylim(c(0, tot_contigs)) +
xlab("ORF#") +
ylab(paste0("Occurances (total = ", tot_contigs, ")"))
ggsave(plot = last_plot(), filename = "../../plots/all_ORF_occurances.pdf", height = 4, width = 7)
# author: dlueckin
# date: Wed May 31 15:23:12 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(gggenes)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# import df and filter  --------------------------------------------------
manual_region_df <- fread("manual_region_df.tsv") %>%
filter(comment == "")
gene_df <- fread("gene_df.tsv")
View(manual_region_df)
View(gene_df)
# author: dlueckin
# date: Wed May 31 13:55:57 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(gggenes)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# import gene data --------------------------------------------------------
gene_df <- data.table()
for(file in list.files("../sco/complete/")){
tmp_df <- fread(paste0("../sco/complete/", file), skip = 2, sep = "_")
tmp_df$contig <- str_remove(file, "\\.fasta\\.sco")
names(tmp_df) <- c("orf#", "start", "end", "strand", "contig")
gene_df <- rbind(gene_df, tmp_df)
}
rm(tmp_df, file)
gene_df$strand[gene_df$strand == "+"] <- TRUE
gene_df$strand[gene_df$strand == "-"] <- FALSE
gene_df$`orf#` <- as.numeric(str_remove(gene_df$`orf#`, ">"))
# import hmm results ------------------------------------------------------
hmm_df <- data.table()
for(file in list.files("../hmm_results/complete", full.names = TRUE, pattern = "domtblout.txt")){
is_not_empty <- as.numeric(str_split(system(command = paste0("wc -l ", file), intern = TRUE), " ")[[1]][1]) > 13
if(is_not_empty){
domtbl <- fread(file, skip = 3, fill = TRUE, header = FALSE) %>%
select(V1, V3, V4, V6, V7, V8, V16, V17) %>%
filter(V1 != "#")
names(domtbl) <- c("hit", "hit_length", "query", "query_length", "evalue", "score", "alignment_start", "alignment_end")
# calc alignment length
domtbl$aln_length <- domtbl$alignment_end - domtbl$alignment_start
# prepare data for later filtering
domtbl$query_length <- as.numeric(domtbl$query_length)
domtbl$score <- as.numeric(domtbl$score)
hmm_df <- rbind(hmm_df, domtbl)
}
}
rm(domtbl, is_not_empty, file)
# combining the plots -----------------------------------------------------
gene_df$id <- paste0(gene_df$contig, "_", str_remove(gene_df$`orf#`, ">"))
hmm_df$id <- str_remove(hmm_df$hit, ">")
gene_df$annot <- hmm_df$query[match(gene_df$id, hmm_df$id)]
gene_df$score <- hmm_df$score[match(gene_df$id, hmm_df$id)]
gene_df$evalue <- hmm_df$evalue[match(gene_df$id, hmm_df$id)]
gene_df$aln_length <- hmm_df$aln_length[match(gene_df$id, hmm_df$id)]
View(gene_df)
# author: dlueckin
# date: Fri Jun  2 10:43:59 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# import data -------------------------------------------------------------
blast_df <- fread("../blastp_pR1SE_vs_all_complete_genes.out")
blast_df$ORF <- as.numeric(str_extract(blast_df$V1, pattern = "\\d*$"))
count_df <- data.table(table(blast_df$ORF))
count_df$V1 <- as.numeric(count_df$V1)
count_df <- count_df %>%
arrange(V1)
View(blast_df)
View(gene_df)
View(blast_df)
View(gene_df)
View(gene_df)
