# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
summary_df <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
# read blast out ----------------------------------------------------------
blast_out <- fread("small_blast_out.csv")
# add annotation
getAnnot <- function(accession){
file <- paste0("blast_hit_annotation/", accession, ".gb")
gb <- suppressMessages(read.gb(file))
return(as.character(gb[[1]]$DEFINITION))
}
View(summary_df)
View(summary_df)
View(df_long)
View(df)
View(blast_out)
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
View(df_long)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
summary_df <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
View(summary_df)
length(unique(summary_df$Accessions))
table(summary_df$Sample)
# read blast out ----------------------------------------------------------
blast_out <- fread("small_blast_out.csv")
# add annotation
getAnnot <- function(accession){
file <- paste0("blast_hit_annotation/", accession, ".gb")
gb <- suppressMessages(read.gb(file))
return(as.character(gb[[1]]$DEFINITION))
}
View(blast_out)
blast_out$annotation <- sapply(blast_out$subject_id, getAnnot)
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
# read blast out ----------------------------------------------------------
blast_out <- fread("small_blast_out.csv")
# add annotation
getAnnot <- function(accession){
file <- paste0("blast_hit_annotation/", accession, ".gb")
gb <- suppressMessages(read.gb(file))
return(as.character(gb[[1]]$DEFINITION))
}
rm(df, df_long)
View(blast_out)
View(data)
n <- fread("samples_names.txt")
data$sample <- n$V1[match(data$sample, n$V2)]
View(data)
n <- fread("samples_names.txt")
data$sample <- n$V1[match(data$Sample, n$V2)]
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
rm(df, df_long)
# nice sample names -------------------------------------------------------
n <- fread("Samples_names.txt")
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
rm(df, df_long)
# nice sample names -------------------------------------------------------
n <- fread("samples_names.txt")
data$Sample <- n$V1[match(data$Sample, n$V2)]
rm(n)
View(data)
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
rm(df, df_long)
# nice sample names -------------------------------------------------------
n <- fread("samples_names.txt")
data$Sample[1]
b
n$V1
n$V2
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Sample", "PMS_value", "Unique_peptides")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
View(df_long)
View(df_long)
View(df)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
View(df_long)
names(df_long) <- c("Accessions", "MW_kDa", "Unique_peptides", "Sample", "PMS_value")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
rm(df, df_long)
n <- fread("samples_names.txt")
data$Sample <- n$V1[match(data$Sample, n$V2)]
rm(n)
View(data)
table(data$Sample)
# author: dlueckin
# date: Fri Apr 21 15:15:13 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(readxl)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Unique_peptides", "Sample", "PMS_value")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
View(data)
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Unique_peptides", "Sample", "PMS_value")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
rm(df, df_long)
# nice sample names -------------------------------------------------------
n <- fread("samples_names.txt")
data$Sample <- n$V1[match(data$Sample, n$V2)]
rm(n)
View(data)
# read blast out ----------------------------------------------------------
blast_out <- fread("small_blast_out.csv")
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Unique_peptides", "Sample", "PMS_value")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
# summarise the data ------------------------------------------------------
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
rm(df, df_long)
# nice sample names -------------------------------------------------------
n <- fread("samples_names.txt")
data$Sample <- n$V1[match(data$Sample, n$V2)]
rm(n)
# read blast out ----------------------------------------------------------
blast_out <- fread("small_blast_out.csv")
# add annotation
getAnnot <- function(accession){
file <- paste0("blast_hit_annotation/", accession, ".gb")
gb <- suppressMessages(read.gb(file))
return(as.character(gb[[1]]$DEFINITION))
}
blast_out$annotation <- sapply(blast_out$subject_id, getAnnot)
# add annotation to summarised data ---------------------------------------
data$closest_hits <- ""
data$annotations <- ""
for(i in 1:nrow(data)){
hits <- blast_out %>%
filter(query_id == data$Accessions[i]) %>%
top_n(3, wt = bit_score)
data$closest_hits[i] <- paste(hits$subject_id, collapse = " -- ")
data$annotations[i] <- paste(hits$annotation, collapse = " -- ")
}
View(hits)
View(hits)
rm(hits)
rm(hits, i)
data <- data %>%
select(Sample, Accessions, MW_kDa, Unique_peptides, PMS_value, annotations, closest_hits)
View(data)
names(data) <- c("sample", "accession", "mw_kda", "unique_peptides", "pms_value", "annotations", "closest_hits")
data <- data %>% arrange(sample, -pms_value)
View(data)
n <- fread("samples_names.txt")
data$Sample <- n$V1[match(data$Sample, n$V2)]
data$Sample <- n$V1[match(data$sample, n$V2)]
View(data)
data$Sample <- n$V1[match(data$sample, n$V2)]
View(n)
# author: dlueckin
# date: Mon Apr 24 14:12:25 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(read.gb)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load input dataframe ----------------------------------------------------
df <- fread("input/MS117_LAR_Multiconsensus_UnfilteredDatabase.csv", skip = 1) %>%
select(Accession, "MW [kDa]", "# Unique Peptides",  starts_with("# PSMs (by Search Engine)"))
df <- df %>%
filter(`# Unique Peptides` >= 2)
df_long <- df %>%
pivot_longer(cols = -c(Accession, `MW [kDa]`, `# Unique Peptides`),
names_to = c("Search Engine", ".value"),
names_pattern = "# PSMs \\(by Search Engine\\): (.+) (\\w+)")
names(df_long) <- c("Accessions", "MW_kDa", "Unique_peptides", "Sample", "PMS_value")
df_long$Sample <- str_replace(df_long$Sample, pattern = " Sequest", "")
View(df_long)
View(data)
data <- df_long %>%
group_by(Sample) %>%
filter(PMS_value >= 1)
View(data)
# read blast out ----------------------------------------------------------
blast_out <- fread("small_blast_out.csv")
# add annotation
getAnnot <- function(accession){
file <- paste0("blast_hit_annotation/", accession, ".gb")
gb <- suppressMessages(read.gb(file))
return(as.character(gb[[1]]$DEFINITION))
}
blast_out$annotation <- sapply(blast_out$subject_id, getAnnot)
# add annotation to summarised data ---------------------------------------
data$closest_hits <- ""
data$annotations <- ""
for(i in 1:nrow(data)){
hits <- blast_out %>%
filter(query_id == data$Accessions[i]) %>%
top_n(3, wt = bit_score)
data$closest_hits[i] <- paste(hits$subject_id, collapse = " -- ")
data$annotations[i] <- paste(hits$annotation, collapse = " -- ")
}
rm(hits, i)
View(blast_out)
View(data)
View(data)
data <- data %>% arrange(Sample, -PMS_value)
table(data$Sample)
n <- fread("samples_names.txt")
data$suSample <- n$V1[match(data$sample, n$V2)]
n <- fread("samples_names.txt")
data$suSample <- n$V1[match(data$Sample, n$V2)]
View(n)
n$V1[match(data$Sample, n$V2)]
data$Sample <- n$V1[match(data$Sample, n$V2)]
data <- data %>%  select(-suSample)
fwrite(x = data, file = "annotations.csv")
setwd("/run/user/1000/gvfs/sftp:host=linux-desktop-1.mpi-bremen.de,user=dlueckin/home/dlueckin/projects/pR1SE_australian_lakes/A_generate_protein_clusters/test_iterative_hmm")
library(rentrez)
ORF_TABLE_PATH <- "../../helper_files/ORF_cutoff_table.csv"
BLACKLIST_PATH <- "../accession_blacklist.txt"
ORF <- "ORF10"
DOMTBLE_FILE <- "tmp_ORF10/ORF10_hmmsearch_result.domtableout.txt"
ORIGINAL_FASTA_FILE <- "../05_curated_blastp_proteins/ORF10_blastp_proteins.faa"
OUTPUT_FILE <- "tmp_ORF10/ORF10_output2.faa"
orf_df <- fread(ORF_TABLE_PATH)
ORF_SCORE_CUTOFF <- orf_df$min_score[orf_df$orf == ORF]
ORF_ALN_LEN_CUTOFF <- orf_df$min_alignment_length[orf_df$orf == ORF]
rm(orf_df)
blacklist <- fread(BLACKLIST_PATH, header = F) %>%
filter(!str_detect(V1, "#"))
# read domtble file -------------------------------------------------------
# read and select relevant rows
domtbl <- fread(DOMTBLE_FILE, skip = 3, fill = TRUE) %>%
select(V1, V3, V4, V6, V7, V8, V16, V17)
names(domtbl) <- c("hit", "hit_length", "query", "query_length", "evalue", "score", "alignment_start", "alignment_end")
# remove unuseable lines
domtbl <- domtbl %>%
filter(hit != "#")
# calc alignment length
domtbl$aln_length <- domtbl$alignment_end - domtbl$alignment_start
# filter based on this specific orf's requirements
domtbl$query_length <- as.numeric(domtbl$query_length)
domtbl$score <- as.numeric(domtbl$score)
domtbl <- domtbl %>%
filter(score >= ORF_SCORE_CUTOFF) %>%
filter(aln_length >= domtbl$query_length[1] * ORF_ALN_LEN_CUTOFF / 100) %>%
filter(!hit %in% blacklist$V1)
# remove based on the old protein file
fasta_in <- read.fasta(ORIGINAL_FASTA_FILE)
novel_acc <- domtbl %>%
filter(!hit %in% getName(fasta_in)) %>%
select(hit) %>%
unlist()
print(paste0("current ORF: ", ORF))
print(paste0("no of proteins before: ", length(fasta_in)))
print(paste0("no of novel proteins: ", length(novel_acc)))
print(novel_acc)
# write old proteins
write.fasta(file.out = OUTPUT_FILE, names = getName(fasta_in), sequences = getSequence(ORIGINAL_FASTA_FILE))
# append new records
if(length(novel_acc) > 0){
print("downloading new accs...")
novel_records <- entrez_fetch(db="protein", id=novel_acc, rettype = "fasta")
write(x = novel_records, file = f_out, append = TRUE)
}
write(x = novel_records, file = OUTPUT_FILE, append = TRUE)
