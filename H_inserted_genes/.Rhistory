# author: dlueckin
# date: Tue Sep 12 16:55:23 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
WINDOW <- 0
# blast_df ----------------------------------------------------------------
blast_df <- fread("combined_blast_results.out")
blast_df <- fread("combined_blast_results.out")
getwd()
blast_df <- fread("combined_blast_results.out")
names(blast_df) <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore", " "))
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
region_df <- region_df %>%
filter(contig_category == "complete")
View(blast_df)
blast_df %>%
filter(pident < 95)
blast_df %>%
filter(pident < 95) %>%
filter(mismatch <= 2)
blast_df <- blast_df %>%
filter(pident < 95) %>%
filter(mismatch <= 2)
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
library(googlesheets4)
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
region_df <- region_df %>%
filter(contig_category == "complete")
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_end <- region_df$region_end_bp[region_df$contig == contig]
if(between(x = spacer_position, left = region_start - WINDOW, right = region_end + WINDOW)){
blast_df$within_region[i] <- TRUE
}
}
contig <-  blast_df$qseqid[i]
contig
View(region_df)
# contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_df <- region_df %>%
filter(contig_category == "complete") %>%
filter(!is.na(region_start_bp))
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
# contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_end <- region_df$region_end_bp[region_df$contig == contig]
if(between(x = spacer_position, left = region_start - WINDOW, right = region_end + WINDOW)){
blast_df$within_region[i] <- TRUE
}
}
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_end <- region_df$region_end_bp[region_df$contig == contig]
if(between(x = spacer_position, left = region_start - WINDOW, right = region_end + WINDOW)){
blast_df$within_region[i] <- TRUE
}
}
blast_df <- fread("combined_blast_results.out")
names(blast_df) <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore", " "))
blast_df <- blast_df %>%
filter(pident > 95) %>%
filter(mismatch <= 2)
blast_df <- blast_df %>%
filter(pident > 95) %>%
filter(mismatch <= 2) %>%
filter(length >= 20)
View(blast_df)
blast_df <- blast_df %>%
filter(pident > 95) %>%
filter(mismatch <= 2) %>%
filter(length >= 20) %>%
filter(qseqid != "CP019286.1")
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
region_df <- region_df %>%
filter(contig_category == "complete") %>%
filter(!is.na(region_start_bp))
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
i = 1
spacer_position <- blast_df$qstart[i]
contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_end <- region_df$region_end_bp[region_df$contig == contig]
if(between(x = spacer_position, left = region_start - WINDOW, right = region_end + WINDOW)){
blast_df$within_region[i] <- TRUE
}
region_df$region_start_bp
contig
region_df$contig == contig
View(region_df)
blast_df <- blast_df %>%
filter(pident > 95) %>%
filter(mismatch <= 2) %>%
filter(length >= 20) %>%
filter(qseqid != "CP019286.1") %>%
filter(qseqid != "AOID01000019.1")
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
region_df <- region_df %>%
filter(contig_category == "complete") %>%
filter(!is.na(region_start_bp))
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
spacer_position <- blast_df$qstart[i]
contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_end <- region_df$region_end_bp[region_df$contig == contig]
if(between(x = spacer_position, left = region_start - WINDOW, right = region_end + WINDOW)){
blast_df$within_region[i] <- TRUE
}
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
contig <-  blast_df$qseqid[i]
region_start <-  region_df$region_start_bp[region_df$contig == contig]
region_end <- region_df$region_end_bp[region_df$contig == contig]
if(between(x = spacer_position, left = region_start - WINDOW, right = region_end + WINDOW)){
blast_df$within_region[i] <- TRUE
}
}
View(blast_df)
blast_df %>% filter(within_region)
true_hits <- blast_df %>% filter(within_region)
View(true_hits)
# author: dlueckin
# date: Tue Jun 27 11:59:11 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(patchwork)
library(googlesheets4)
library(cowplot)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# broder_df ---------------------------------------------------------------
manual_region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
manual_region_df <- manual_region_df %>%
filter(contig_category == "complete")
# read protein_df with annotations ----------------------------------------
prot_df <- fread("../G_annotate_complete_relatives/scripts/improved_gene_df.tsv")
prot_df <- prot_df %>%
filter(contig %in% manual_region_df$contig)
manual_region_df$insert_size <- 0
manual_region_df$inserted_genes <- 0
for(i in 1:nrow(manual_region_df)){
ORF10_end <- prot_df %>%
filter(contig == manual_region_df$contig[i], annot == "ORF10.faa") %>%
select(end) %>%
pull()
ORF17_start <- prot_df %>%
filter(contig == manual_region_df$contig[i], annot == "ORF17.faa") %>%
select(start) %>%
pull()
manual_region_df$insert_size[i] <- abs(ORF17_start - ORF10_end)
ORF10_orfn <- prot_df %>%
filter(contig == manual_region_df$contig[i], annot == "ORF10.faa") %>%
select(`orf#`) %>%
pull() %>%
as.numeric()
ORF17_orfn <- prot_df %>%
filter(contig == manual_region_df$contig[i], annot == "ORF17.faa") %>%
select(`orf#`) %>%
pull() %>%
as.numeric()
manual_region_df$inserted_genes[i] <- abs(ORF17_orfn - ORF10_orfn)
}
p1 <- ggplot(manual_region_df, aes(x = inserted_genes)) +
geom_density() +
xlim(c(0, 12)) +
theme_cowplot(
font_size = 10
) +
xlab("Genes") +
ylab("Frequency") +
ggtitle("Number of genes inserted",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_density() +
xlim(c(0, 7500)) +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
ggplot(manual_region_df, aes(x = insert_size)) +
geom_violin() +
xlim(c(0, 7500)) +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
ggplot(manual_region_df, aes(x = insert_size)) +
geom_box_plot()
ggplot(manual_region_df, aes(x = insert_size)) +
geom_boxplot()
ggplot(manual_region_df, aes(x = insert_size)) +
geom_violin()
ggplot(manual_region_df, aes(x = insert_size)) +
geom_scatter()
ggplot(manual_region_df, aes(x = insert_size)) +
geom_boxplot()
ggplot(manual_region_df, aes(x = "lala", y = insert_size)) +
geom_violin()
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_density() +
xlim(c(0, 7500)) +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_density(aes(y = ..count..),) +
xlim(c(0, 7500)) +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_vline(aes(y = ..count..),) +
xlim(c(0, 7500)) +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram() +
xlim(c(0, 7500)) +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram() +
xlim() +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram() +
# xlim() +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram(binwidth = 500) +
# xlim() +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram(binwidth = 500, color = "black", alpha = 0.6) +
# xlim() +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Frequency") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram(binwidth = 500, color = "black", alpha = 0.6) +
# xlim() +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Count") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
ggsave(plot = p3, filename = "../plots/insert_size.pdf", height = 6, width = 6)
ggsave(plot = p3, filename = "../plots/insert_size.png", height = 6, width = 6)
p1 <- ggplot(manual_region_df, aes(x = inserted_genes)) +
geom_histogram(binwidth = 1, color = "black", alpha = 0.6) +
# xlim(c(0, 12)) +
theme_cowplot(
font_size = 10
) +
xlab("Genes") +
ylab("Count") +
ggtitle("Number of genes inserted",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p2 <- ggplot(manual_region_df, aes(x = insert_size)) +
geom_histogram(binwidth = 500, color = "black", alpha = 0.6) +
# xlim() +
theme_cowplot(
font_size = 10
) +
xlab("Length (bp)") +
ylab("Count") +
ggtitle("Insert size (bp)",
subtitle = paste0("complete apHPVs only (n = ", nrow(manual_region_df), ")"))
p3 <- p1 / p2
p1 / p2
ggsave(plot = p3, filename = "../plots/insert_size.pdf", height = 6, width = 6)
ggsave(plot = p3, filename = "../plots/insert_size.png", height = 6, width = 6)
