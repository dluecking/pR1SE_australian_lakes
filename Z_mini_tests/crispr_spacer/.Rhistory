current_line <- lines[i]
if(str_detect(current_line, "gene=")){
current_gene_id <- str_remove(current_line, "^.*gene=")
new_line <- str_replace(current_line,
pattern = "gene=.*$",
replacement = paste0("gene='", big_df$pfam_hits[big_df$V1 == current_gene_id], "'"))
lines[i] <- new_line
}
}
writeLines(lines, con = new_file, sep = "\n")
}
View(transposase_df)
table(transposase_df$fasta)
# author: dlueckin
# date: Fri Aug 25 16:02:14 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(ggplot2)
library(dplyr)
library(cowplot)
library(dplyr)
library(cowplot)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# go from here then you dont have to rerun the code above, still fucking slow
blast_df <- fread("blast_df.tsv")
ggplot(blast_df %>% filter(is_x), aes(x = origin, fill = is_transposase)) +
geom_bar(position = "fill", color = "black") +
theme_cowplot()
ggplot(blast_df %>% filter(is_x), aes(x = COG_description, fill = is_transposase)) +
geom_bar(color = "black") +
facet_wrap(~origin) +
theme_cowplot() +
coord_flip() +
theme(legend.position = "bottom") +
xlab("")
read_count_df <- fread("mvome_cog_analysis_mapped_read_counts_per_category.tsv")
read_count_df$origin <- str_remove(string = read_count_df$file, pattern = ".*_mapped_to_")
read_count_df$origin <- str_remove(string = read_count_df$origin, pattern = "\\_r*\\d*.*$")
read_count_df$num_seqs <- as.numeric(str_remove(read_count_df$num_seqs, ","))
# prep for plotting -------------------------------------------------------
to_plot <- read_count_df %>% group_by(origin) %>% summarise(total_reads = sum(num_seqs))
to_plot <- left_join(to_plot,
blast_df %>% filter(is_x) %>% group_by(origin) %>% count(),
by = "origin")
to_plot <- left_join(to_plot,
blast_df %>% filter(is_transposase) %>% group_by(origin) %>% count(),
by = "origin")
names(to_plot) <- c("origin", "total", "x", "transposase")
to_plot <- to_plot %>%
mutate("unknowns" = total - x)
to_plot$x_perc <- to_plot$x / to_plot$total * 100
to_plot$transpo_perc <- to_plot$transposase / to_plot$total * 100
to_plot_long <- to_plot %>%
select(origin, x_perc, transpo_perc) %>%
pivot_longer(cols = c(x_perc, transpo_perc),
names_to = "type",
values_to = "perc")
ggplot(to_plot_long, aes(x = origin, y = perc, fill = type)) +
geom_bar(stat = 'identity', color = "black") +
theme_cowplot()
View(to_plot_long)
View(to_plot)
View(read_count_df)
View(read_count_df)
to_plot <- read_count_df %>% group_by(origin) %>% summarise(total_reads = sum(num_seqs))
to_plot
read_count_df
to_plot <- read_count_df %>% group_by(origin) %>% summarise(total_reads = sum(num_seqs, na.rm = TRUE))
to_plot
to_plot <- left_join(to_plot,
blast_df %>% filter(is_x) %>% group_by(origin) %>% count(),
by = "origin")
to_plot <- left_join(to_plot,
blast_df %>% filter(is_transposase) %>% group_by(origin) %>% count(),
by = "origin")
names(to_plot) <- c("origin", "total", "x", "transposase")
to_plot <- to_plot %>%
mutate("unknowns" = total - x)
to_plot$x_perc <- to_plot$x / to_plot$total * 100
to_plot$transpo_perc <- to_plot$transposase / to_plot$total * 100
to_plot_long <- to_plot %>%
select(origin, x_perc, transpo_perc) %>%
pivot_longer(cols = c(x_perc, transpo_perc),
names_to = "type",
values_to = "perc")
ggplot(to_plot_long, aes(x = origin, y = perc, fill = type)) +
geom_bar(stat = 'identity', color = "black") +
theme_cowplot()
ev_only <- ggplot(blast_df %>% filter(is_x) %>% filter(origin == "ev"), aes(x = COG_description, fill = is_transposase)) +
geom_bar(color = "black") +
# facet_wrap(~origin) +
theme_cowplot() +
coord_flip() +
theme(legend.position = "bottom") +
xlab("")
ggplot(blast_df %>% filter(is_x) %>% filter(origin == "ev"), aes(x = COG_description, fill = is_transposase)) +
geom_bar(color = "black") +
# facet_wrap(~origin) +
theme_cowplot() +
coord_flip() +
theme(legend.position = "bottom") +
xlab("")
View(to_plot)
View(to_plot)
read_count_df <- fread("mvome_cog_analysis_mapped_read_counts_per_category.tsv")
read_count_df$origin <- str_remove(string = read_count_df$file, pattern = ".*_mapped_to_")
read_count_df$origin <- str_remove(string = read_count_df$origin, pattern = "\\_r*\\d*.*$")
read_count_df$num_seqs <- as.numeric(str_remove(read_count_df$num_seqs, ","))
to_plot <- read_count_df %>% group_by(origin) %>% summarise(total_reads = sum(num_seqs, na.rm = TRUE))
to_plot
read_count_df$origin <- str_remove(string = read_count_df$origin, pattern = "\\_r*\\d*.*$")
read_count_df <- fread("mvome_cog_analysis_mapped_read_counts_per_category.tsv")
read_count_df$origin <- str_remove(string = read_count_df$file, pattern = ".*_mapped_to_")
read_count_df$origin <- str_remove(string = read_count_df$origin, pattern = "\\_r*\\d*.*$")
View(read_count_df)
read_count_df$num_seqs <- as.numeric(str_remove(read_count_df$num_seqs, ","))
read_count_df <- fread("mvome_cog_analysis_mapped_read_counts_per_category.tsv")
read_count_df$origin <- str_remove(string = read_count_df$file, pattern = ".*_mapped_to_")
read_count_df$origin <- str_remove(string = read_count_df$origin, pattern = "\\_r*\\d*.*$")
read_count_df$num_seqs[7,4]
read_count_df$num_seqs[7:4]
str_remove(read_count_df$num_seqs, ",")
read_count_df$num_seqs
length(read_count_df$num_seqs)
str_remove_all(read_count_df$num_seqs, ",")
length(str_remove_all(read_count_df$num_seqs, ","))
read_count_df$num_seqs <- as.numeric(str_remove_all(read_count_df$num_seqs, ","))
to_plot <- read_count_df %>% group_by(origin) %>% summarise(total_reads = sum(num_seqs, na.rm = TRUE))
to_plot <- left_join(to_plot,
blast_df %>% filter(is_x) %>% group_by(origin) %>% count(),
by = "origin")
to_plot <- left_join(to_plot,
blast_df %>% filter(is_transposase) %>% group_by(origin) %>% count(),
by = "origin")
View(to_plot)
names(to_plot) <- c("origin", "total", "x", "transposase")
to_plot <- to_plot %>%
mutate("unknowns" = total - x)
to_plot$x_perc <- to_plot$x / to_plot$total * 100
to_plot$transpo_perc <- to_plot$transposase / to_plot$total * 100
to_plot_long <- to_plot %>%
select(origin, x_perc, transpo_perc) %>%
pivot_longer(cols = c(x_perc, transpo_perc),
names_to = "type",
values_to = "perc")
View(to_plot_long)
ggplot(to_plot_long, aes(x = origin, y = perc, fill = type)) +
geom_bar(stat = 'identity', color = "black") +
theme_cowplot()
to_plot <- to_plot %>%
mutate("unknowns" = total - x)
to_plot <- read_count_df %>% group_by(origin) %>% summarise(total_reads = sum(num_seqs, na.rm = TRUE))
to_plot <- left_join(to_plot,
blast_df %>% filter(is_x) %>% group_by(origin) %>% count(),
by = "origin")
to_plot <- left_join(to_plot,
blast_df %>% filter(is_transposase) %>% group_by(origin) %>% count(),
by = "origin")
names(to_plot) <- c("origin", "total", "x", "transposase")
View(to_plot)
to_plot <- to_plot %>%
mutate("unknowns" = total - x)
View(to_plot_long)
View(to_plot)
to_plot$x_perc <- to_plot$x / to_plot$total * 100
to_plot$transpo_perc <- to_plot$transposase / to_plot$total * 100
ggplot(blast_df %>% filter(is_x) %>% filter(origin == "ev"), aes(x = COG_description, fill = is_transposase)) +
geom_bar(color = "black") +
# facet_wrap(~origin) +
theme_cowplot() +
coord_flip() +
theme(legend.position = "bottom") +
xlab("")
ggplot(blast_df %>% filter(is_x), aes(x = COG_description, fill = is_transposase)) +
geom_bar(color = "black") +
facet_wrap(~origin) +
theme_cowplot() +
coord_flip() +
theme(legend.position = "bottom") +
xlab("")
ggplot(blast_df %>% filter(is_x), aes(x = origin, fill = is_transposase)) +
geom_bar(position = "fill", color = "black") +
theme_cowplot()
# author: dlueckin
# date: Mon Sep 11 13:52:19 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# load annotation files ---------------------------------------------------
big_df <- data.table()
for(file in list.files("DRAM_out/")){
df <- fread(paste0("DRAM_out/", file, "/annotations.tsv"))
print(length(df))
big_df <- rbind(big_df, df)
}
# transposase -------------------------------------------------------------
# Filter the dataframe
transposase_df <- big_df %>%
filter(if_any(everything(), ~grepl("IS\\d\\+*|Tn\\d\\+*|attTn\\d\\+*|transposase|Transposase", .)))
View(transposase_df)
table(transposase_df$rank)
# cross check to google doc, so we only keep ev producers
transposase_df$clean_contig_id <- str_remove(transposase_df$scaffold, "-contig.*$"
)
transposase_df$clean_contig_id <- str_remove(transposase_df$clean_contig_id, "_genomic.*$")
table(transposase_df$clean_contig_id)
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1fk36-irLuSF_kawAXAMcjubpkxKYkLHCtQ-Rv25QdTk/edit#gid=1783028011",
sheet = "top200 MAGs"))
library(googlesheets4)
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1fk36-irLuSF_kawAXAMcjubpkxKYkLHCtQ-Rv25QdTk/edit#gid=1783028011",
sheet = "top200 MAGs"))
top200_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1fk36-irLuSF_kawAXAMcjubpkxKYkLHCtQ-Rv25QdTk/edit#gid=1783028011",
sheet = "top200 MAGs"))
transposase_df$origin <- top200_df$final_label[match(transposase_df$clean_contig_id, top200_df$shortname)]
table(transposase_df$origin)
transposase_df %>% filter(origin = "ev")
transposase_df %>% filter(origin == "ev")
transposase_df %>% filter(origin == "ev_producer")
a <-transposase_df %>% filter(origin == "ev_producer")
table(a$pfam_hits)
hits <- as.data.table(table(a$pfam_hits))
View(hits)
table(transposase_df$clean_contig_id)
df <- fread("20160316_Bin_33_4_TeCentral_results.tsv")
View(df)
# author: dlueckin
# date: Tue Sep 12 16:55:23 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()path)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
# author: dlueckin
# date: Tue Sep 12 16:55:23 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
a <- fread("spacer_34/spacer_seqName.fsa")
View(a)
a <- fread("spacer_34/spacer_taxon.fsa")
View(a)
b <- fread("spacer_34/spacer_id.fsa")
View(b)
out <- fread("combined_blast_results.out")
View(out)
blast_df <- fread("combined_blast_results.out")
blast_df <- fread("combined_blast_results.out")
names(blast_df) <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore", " "))
View(blast_df)
host_df <- fread("../../../../bioinf/dbs/iphop_db/Test_db/db_infos/Host_Genomes.tsv")
View(host_df)
blast_df$host_id <- str_extract(blast_df$sseqid, "^\\d*")
blast_df$host_id <- str_extract(blast_df$sseqid, "\\:.*$")
blast_df$host_id <- str_remove(blast_df$sseqid, "\\:.*$")
blast_df$host_taxonomy <- host_df$Repr_taxonomy[match(blast_df$host_id, host_df$Genome)]
region_df <- as.data.table(read_sheet("https://docs.google.com/spreadsheets/d/1J9eVHjpSJsBOVN_gavMRTGaNeT7iXZSdowyOkn9GUsA/edit#gid=1238763630",
sheet = "pR1SE_relatives"))
region_df <- region_df %>%
filter(contig_category == "complete")
View(blast_df)
str_extract(blast_df$host_taxonomy, "s\\_\\_.*$")
str_remove(str_extract(blast_df$host_taxonomy, "s\\_\\_.*$"), "s\\_\\_")
blast_df$host_sepcies <- str_remove(str_extract(blast_df$host_taxonomy, "s\\_\\_.*$"), "s\\_\\_")
blast_df$host_species <- str_remove(str_extract(blast_df$host_taxonomy, "s\\_\\_.*$"), "s\\_\\_")
region_df$CIRSPR_targeted_by <- ""
blast_df %>%
filter(qseqid == region_df$contig[1])
blast_df %>%
filter(qseqid == region_df$contig[2])
blast_df %>%
filter(qseqid == region_df$contig[2]) %>%
select(host_species) %>%
unique()
blast_df %>%
filter(qseqid == region_df$contig[3]) %>%
select(host_species) %>%
unique()
View(region_df)
blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique()
blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique() %>%
unlist()
blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique() %>%
unlist() %>%
}
blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique() %>%
unlist() %>%
paste0()
blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique() %>%
unlist() %>%
paste0() %>%
paste0()
blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- blast_df %>%
filter(qseqid == region_df$contig[30]) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts
paste(hosts, collapse = "; ")
region_df <- region_df %>%
filter(contig_category == "complete")
blast_df$host_species <- str_remove(str_extract(blast_df$host_taxonomy, "s\\_\\_.*$"), "s\\_\\_")
region_df$CIRSPR_targeted_by <- ""
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by <- hosts
}
View(region_df)
glimpse(region-df)
glimpse(region_df)
region_df$CIRSPR_targeted_by <- ""
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by[i] <- hosts
}
glimpse(region_df)
write(region_df$CIRSPR_targeted_by, "CRISPR_targeted_by.tsv")
# author: dlueckin
# date: Tue Sep 12 16:55:23 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
spacer_position <- blast_df$qstart[1]
region_df$region_start_bp[region_df$contig == blast_df$qseqid[1]]
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
))
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
if(between(x = spacer_position,
left = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]],
right = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]])){
blast_df$within_region[i] <- TRUE
}
}
table(blast_df$within_region)
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
if(between(x = spacer_position,
left = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]-5000,
right = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]+5000)){
blast_df$within_region[i] <- TRUE
}
}
table(blast_df$within_region)
region_df$CIRSPR_targeted_by <- ""
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by[i] <- hosts
}
write(region_df$CIRSPR_targeted_by, "CRISPR_targeted_by.tsv")
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
if(between(x = spacer_position,
left = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]-3000,
right = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]+3000)){
blast_df$within_region[i] <- TRUE
}
}
table(blast_df$within_region)
region_df$CIRSPR_targeted_by <- ""
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by[i] <- hosts
}
write(region_df$CIRSPR_targeted_by, "CRISPR_targeted_by.tsv")
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
if(between(x = spacer_position,
left = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]-2000,
right = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]+2000)){
blast_df$within_region[i] <- TRUE
}
}
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
if(between(x = spacer_position,
left = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]-5000,
right = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]]+5000)){
blast_df$within_region[i] <- TRUE
}
}
region_df$CIRSPR_targeted_by <- ""
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
filter(within_region) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by[i] <- hosts
}
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
filter(within_region) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by[i] <- hosts
}
write(region_df$CIRSPR_targeted_by, "CRISPR_targeted_by.tsv")
# check that the spacer is within conserved region boundaries
blast_df$within_region <- FALSE
for(i in 1:nrow(blast_df)){
spacer_position <- blast_df$qstart[i]
if(between(x = spacer_position,
left = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]],
right = region_df$region_start_bp[region_df$contig == blast_df$qseqid[i]])){
blast_df$within_region[i] <- TRUE
}
}
region_df$CIRSPR_targeted_by <- ""
for(i in 1:nrow(region_df)){
hosts <- blast_df %>%
filter(qseqid == region_df$contig[i]) %>%
filter(within_region) %>%
select(host_species) %>%
unique() %>%
unlist()
hosts <- paste(hosts, collapse = "; ")
region_df$CIRSPR_targeted_by[i] <- hosts
}
write(region_df$CIRSPR_targeted_by, "CRISPR_targeted_by.tsv")
