install.packages("dplyr")
install.packages("data.table")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("stringr")
install.packages("seqinr")
install.packages("esquisse")
library(data.table)
df <- fread("Documents/tara_ocean_read_counts.tsv")
View(df)
glimpse(df.kernel())
glimpse(df)
library(dplyr)
glimpse(df)
df <- fread("Documents/tara_ocean_read_counts.tsv")
sum(df$V1)
install.packages("gggenes")
devtools::install_github("wilkox/gggenes")
install.packages("devtools")
file.edit('~/Renviron')
file.edit("~/.Renviron")
file.edit("~/Renviron")
options(internet.info = 0)
options(internet.info = 1)
install.packages("gggenes")
file.edit("~/.Renviron")
library(gggenes)
library(bigrquery)
install.packages("bigrquery")
library(bigrquery)
install.packages("bigrquery")
# author: dlueckin
# date: Tue May  9 13:14:32 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(tidyr)
library(dplyr)
# working directory -------------------------------------------------------
# this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
this_dir <- "/home/dlueckin/projects/pR1SE_australian_lakes/D_search_IMG/scripts"
setwd(this_dir)
# author: dlueckin
# date: Tue May  9 13:14:32 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(tidyr)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# author: dlueckin
# date: Tue May  9 13:14:32 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(tidyr)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
# explore -----------------------------------------------------------------
big_df <- data.table()
for(file in list.files("hmm_out/", full.names = TRUE, pattern = "dom.out")){
is_not_empty <- as.numeric(str_split(system(command = paste0("wc -l ", file), intern = TRUE), " ")[[1]][1]) > 13
if(is_not_empty){
domtbl <- fread(file, skip = 3, fill = TRUE) %>%
select(V1, V3, V4, V6, V7, V8, V16, V17) %>%
filter(V1 != "#")
names(domtbl) <- c("hit", "hit_length", "query", "query_length", "evalue", "score", "alignment_start", "alignment_end")
current_ORF <- str_extract(file, pattern = "ORF[^\\_]*")
# calc alignment length
domtbl$aln_length <- domtbl$alignment_end - domtbl$alignment_start
# prepare data for later filtering
domtbl$query_length <- as.numeric(domtbl$query_length)
domtbl$score <- as.numeric(domtbl$score)
domtbl <- domtbl %>%
filter(score >= 50)
big_df <- rbind(big_df, domtbl)
}
}
rm(orf_df, domtbl, current_ORF)
View(big_df)
big_df <- data.table()
for(file in list.files("hmm_out/", full.names = TRUE, pattern = "dom.out")){
is_not_empty <- as.numeric(str_split(system(command = paste0("wc -l ", file), intern = TRUE), " ")[[1]][1]) > 13
if(is_not_empty){
domtbl <- fread(file, skip = 3, fill = TRUE) %>%
select(V1, V3, V4, V6, V7, V8, V16, V17) %>%
filter(V1 != "#")
names(domtbl) <- c("hit", "hit_length", "query", "query_length", "evalue", "score", "alignment_start", "alignment_end")
current_ORF <- str_extract(file, pattern = "ORF[^\\_]*")
# calc alignment length
domtbl$aln_length <- domtbl$alignment_end - domtbl$alignment_start
# prepare data for later filtering
domtbl$query_length <- as.numeric(domtbl$query_length)
domtbl$score <- as.numeric(domtbl$score)
domtbl <- domtbl
big_df <- rbind(big_df, domtbl)
}
}
View(big_df)
setwd("/run/user/1000/gvfs/sftp:host=linux-desktop-1.mpi-bremen.de,user=dlueckin/home/dlueckin/projects/pR1SE_australian_lakes/B_known_hosts/scripts")
fread("prot_df")
fread("prot_df.tsv")
a <- fread("prot_df.tsv")
View(a)
View(big_df)
# author: dlueckin
# date: Tue Jul  4 15:39:06 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
blast_df <- fread("../diamond_blastp_nr_out/all_pR1SE_relatives_genes_vs_nr.out")
n <- str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle", " ")
n <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle", " "))
names(blast_df) <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle", " "))
View(blast_df)
blast_df$annotation <- blast_df$stitle
blast_df <- fread("../diamond_blastp_nr_out/all_pR1SE_relatives_genes_vs_nr.out")
names(blast_df) <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle", " "))
blast_df <- blast_df %>%
aa
daa
sd
as
da
f
View(blast_df)
blast_df <- blast_df %>%
filter(!str_detect(stitle, "hypothetical"))
View(blast_df)
source("/run/user/1000/gvfs/sftp:host=linux-desktop-1.mpi-bremen.de,user=dlueckin/home/dlueckin/projects/pR1SE_australian_lakes/G_annotate_complete_relatives/scripts/08_add_blast_annotation.R", echo=TRUE)
# remove hypos, select the best (bitscore wise) hit per query hit
blast_df <- blast_df %>%
filter(!str_detect(stitle, "hypothetical"))
prot_df <- fread("improved_gene_df_with_DRAM.tsv")
View(prot_df)
prot_df$nr_annotation <- ""
prot_df$nr_bitscore <- 0
prot_df$nr_annotation <- as.character()
prot_df$nr_bitscore <- as.numeric()
prot_df$nr_annotation <- NA
prot_df$nr_bitscore <- NA
blast_df$stitle <- str_remove(blast_df$stitle, blast_df$sseqid)
i = 9
tmp_df <- blast_df %>%
filter(qseqid == prot_df$id[i])
View(tmp_df)
tmp_df %>%
slice_max(order_by = bitscore) %>%
select(stitle) %>%
pull()
tmp_df %>%
slice_max(order_by = bitscore) %>%
select(stitle) %>%
pull() %>%
trimws(which = "both")
tmp_df <- blast_df %>%
filter(qseqid == prot_df$id[i]) %>%
slice_max(order_by = bitscore, n = 1)
prot_df$nr_annotation[i] <- tmp_df$stitle %>%
trimws()
View(prot_df)
prot_df$nr_annotation[i] <- tmp_df$stitle %>%
trimws() %>%
pull()
prot_df$nr_annotation[i] <- tmp_df$stitle[1] %>%
trimws()
prot_df$nr_annotation <- NA
prot_df$nr_bitscore <- NA
for(i in 1:nrow(prot_df)){
tmp_df <- blast_df %>%
filter(qseqid == prot_df$id[i]) %>%
slice_max(order_by = bitscore, n = 1)
if(nrow(tmp_df) >= 1){
prot_df$nr_annotation[i] <- tmp_df$stitle[1] %>%
trimws()
prot_df$nr_bitscore[i] <- tmp_df$bitscore[1]
}
}
# author: dlueckin
# date: Tue Jul  4 15:39:06 2023
# libraries ---------------------------------------------------------------
library(data.table)
library(stringr)
library(seqinr)
library(tidyr)
library(ggplot2)
library(dplyr)
# working directory -------------------------------------------------------
this_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this_dir)
print(paste0("Setting wd to: \n ", this_dir))
prot_df <- fread("improved_gene_df_with_DRAM.tsv")
# import blast out --------------------------------------------------------
blast_df <- fread("../diamond_blastp_nr_out/all_pR1SE_relatives_genes_vs_nr.out")
names(blast_df) <- unlist(str_split("qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle", " "))
# filter ------------------------------------------------------------------
# remove hypos
blast_df <- blast_df %>%
filter(!str_detect(stitle, "hypothetical"))
blast_df$stitle <- str_remove(blast_df$stitle, blast_df$sseqid)
# add to prot_df ----------------------------------------------------------
prot_df$nr_annotation <- NA
prot_df$nr_bitscore <- NA
for(i in 1:nrow(prot_df)){
tmp_df <- blast_df %>%
filter(qseqid == prot_df$id[i]) %>%
slice_max(order_by = bitscore, n = 1)
if(nrow(tmp_df) >= 1){
prot_df$nr_annotation[i] <- tmp_df$stitle[1] %>%
trimws()
prot_df$nr_bitscore[i] <- tmp_df$bitscore[1]
}
}
View(prot_df)
View(blast_df)
View(prot_df)
fwrite(prot_df, "improved_gene_df_with_DRAM_and_nr.tsv")
